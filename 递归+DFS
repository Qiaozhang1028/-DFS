//#include <bits/stdc++.h>
//using namespace std;
//const int N = 20;
//int n;
//int st[N];//这个数组用来纪录每个数的状态，0表示还没考虑，1表示选这个数，2表示不选 
//void dfs(int x)//x表示当前枚举到了哪个位置 
//{
//	if(x>n)
//	{
//		for(int i=0;i<=n;i++)
//			if(st[i] == 1)
//			{
//				cout<<i ;
//			}
//		
//			cout<<endl;
//		
//		return;
//	 } 
//	
//	
//	//选 
//	st[x] = 1;
//	dfs(x+1);
//	st[x]= 0;//恢复现场 
//	
//	//不选
//	st[x] = 2;
//	dfs(x+1);
//	st[x] = 0;//恢复现场 
//}
//int main()
//{
//	cin>>n;
//	dfs(1);
//	return 0;
//}

//1.依次枚举每个位置应该放哪个数
//2.依次枚举每个数应该放哪个位置 


//#include <bits/stdc++.h>
//using namespace std;
//const int N = 10;
//int n;
//bool st[N];//状态数组,true表示选过，flase表示还未选 
//int arr[N]; //村的是答案，也就是123/321/321/ 
////x表示当前枚举到了哪个位置 
//void dfs(int x)
//{
//	if(x>n)
//	{
//		for(int i = 1;i<=n;i++)
//		{
//			cout<<arr[i];
//		}
//		cout<<endl;
//		return ;
//	}
//	for(int i = 1;i<=n;i++)
//	{
//		if(!st[i])
//		{
//			st[i] = true;
//			arr[x]=i;
//			dfs(x+1);
//			st[i] = false;
//			arr[x] = 0;
//		}
//	}
//}
//
//int main()
//{
//	cin>>n;
//	dfs(1);
//	
//	return 0;
//}
//#include <bits/stdc++.h>
//using namespace std;
//const int N = 21;
//int n,r;
//int arr[N];
//void dfs(int x,int start)
//{
//	if(x>r)
//	{
//		for(int i=1;i<=r;i++)
//		{
//			printf("%3d",arr[i]);
//		}
//	}
//	for(int i=start;i<=r;i++)
//	{
//		arr[x] = i;
//		dfs(x+1,i+1);
//		arr[x] = 0;
//	}
//}
//
//int main()
//{
//	
//	cin>>n>>r;
//	dfs(1,1);
//	return 0;
//}
//#include <bits/stdc++.h>
//using namespace std;
//const int N = 30;
//int n,k;
//int arr[N];//存答案
//int res=0;//存储素数 
//int q[N];//存储数据 
//bool is_prim(int sum)
//{
//	if(sum<=2)
//	{
//		return false;
//	}
//	for(int i=2;i<=sum/i;i++)
//	{
//		if(sum%i == 0)
//		{
//			return false;
//		}
//	}
//	return true;
//}
//void dfs(int x,int start)//x表示枚举到了什么位置，start表示从几开始枚举 
//{
//	if(x>k)
//	{
//		int sum=0;
//		for(int i = 1;i<=k;i++)
//		{
//			sum+=arr[i];
//		}
//		if(is_prim(sum))
//		{
//			res++;
//		}
//		return;
//	}
//	for(int i=start;i<=n;i++)
//	{
//		arr[x] = q[i];
//		dfs(x+1,i+1);//继续向下，深度优先 
//		arr[x] = 0;//恢复现场 
//	}
//}
//int main()
//{
//	cin>>n>>k;	
//	for(int i=1;i<=n;i++)
//	{
//		cin>>q[i];
//	}
//	dfs(1,1);
//	cout<<res<<endl;
//	return 0;
//}
