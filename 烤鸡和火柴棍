//#include <bits/stdc++.h>
//using namespace std;
//const int N = 21;
//int n,r;
//int arr[N];
//void dfs(int x,int start)
//{
//	if(x>r)
//	{
//		for(int i=1;i<=r;i++)
//		{
//			printf("%3d",arr[i]);
//		}
//	}
//	for(int i=start;i<=r;i++)
//	{
//		arr[x] = i;
//		dfs(x+1,i+1);
//		arr[x] = 0;
//	}
//}
//
//int main()
//{
//	
//	cin>>n>>r;
//	dfs(1,1);
//	return 0;
//}
//#include <bits/stdc++.h>
//using namespace std;
//const int N = 30;
//int n,k;
//int arr[N];//存答案
//int res=0;//存储素数 
//int q[N];//存储数据 
//bool is_prim(int sum)
//{
//	if(sum<=2)
//	{
//		return false;
//	}
//	for(int i=2;i<=sum/i;i++)
//	{
//		if(sum%i == 0)
//		{
//			return false;
//		}
//	}
//	return true;
//}
//void dfs(int x,int start)//x表示枚举到了什么位置，start表示从几开始枚举 
//{
//	if(x>k)
//	{
//		int sum=0;
//		for(int i = 1;i<=k;i++)
//		{
//			sum+=arr[i];
//		}
//		if(is_prim(sum))
//		{
//			res++;
//		}
//		return;
//	}
//	for(int i=start;i<=n;i++)
//	{
//		arr[x] = q[i];
//		dfs(x+1,i+1);//继续向下，深度优先 
//		arr[x] = 0;//恢复现场 
//	}
//}
//int main()
//{
//	cin>>n>>k;	
//	for(int i=1;i<=n;i++)
//	{
//		cin>>q[i];
//	}
//	dfs(1,1);
//	cout<<res<<endl;
//	return 0;
//}

//烤鸡
//#include <bits/stdc++.h>
//using namespace std;
//const int N = 20;
//int n;
//int arr[N];//存临时方案 
//int res = 0;//存方案数
//int mem[59055][N];//存所有方案 
//void dfs(int x,int sum)//x表示当前枚举到了哪一位，sum表示当前已经选了的调料的总质量 
//{
//	if(sum>n)
//	{
//		return ;//剪枝 
//	}
//	if(x>10)
//	{
//		if(sum==n)
//		{
//			res++;
//			for(int i=1;i<=10;i++)
//			{
//				mem[res][i] = arr[i];
//			}
//			
//		}
//		return;
//	}
//	for(int i = 1;i<=3;i++)
//	{
//		arr[x] = i;
//		dfs(x+1,sum+i);
//		arr[x] = 0;//恢复现状 
//	}
//}
//
//
//int main()
//{
//	
//	cin>>n;
//	dfs(1,0);
//	cout<<res<<endl;
//	for(int i=1;i<=res;i++)
//	{
//		for(int j=1;j<=10;j++)
//		{
//			cout<<mem[i][j];
//		}
//	}
//	return 0;
// } 
//
//#include <bits/stdc++.h>
//using namespace std;
//
//const int N = 10010;
//int arr[N];//存储代表手指序号的数列
//int res; 
//int n,m;
//int mars[N];//记录火星人的初始排列 
//bool st[N];//表示每个数选没选过 
//bool return0 = false;
//void dfs(int x)
//{
//	if(return0)
//	{
//		return;
//	}
//	if(x>n)
//	{
//		res++;
//		if(res ==m+1)
//		{
//			return0 = true;
//			for(int i=1;i<=n;i++)
//			{
//				cout<<arr[i];
//			}
//		}
//		return;
//	}
//	
//	
//	for(int i=0;i<=n;i++)
//	{
//		if(!res)
//		{
//			i=mars[x];
//		}
//	
//	if(!st[i])
//	{
//		st[i] = true;
//		arr[x]=i;
//		dfs(x+1);
//		st[i] = false;//恢复现场 
//		arr[x]=0;
//	}
//	}
//}
//int main()
//{
//	cin>>n;
//	cin>>m
//	for(int i=1;i<=n;i++)
//	{
//		cin>>a[i];
//	 } 
//	dfs(1);
//	return 0;
//}



//火柴棍 
#include <bits/stdc++.h>
using namespace std;
const int N = 10010 ;
int n;
int arr[N];
int nums[10010]={6,2,5,5,4,5,6,3,7,6}//存火柴棍 
int col(int x)//计算火柴棍数量 
{
	if(nums[x])
		return nums[x];
	else{
		int sumFire = 0;
		while(x)
		{
			sumFire +=nums[x%10];
			x/=10;
		 } 
		 return sumFire;
	}
}
void dfs(int x,int sum)
{
	if(sum>n)
	{
		return;
	}
	if(x>3)
	{
		if(arr[1]+arr[2]==arr[3]&& sum == n)
		{
			res++;
		}
		return;
	}
	
	for(int i=0;i<=1000;i++)
	{
		arr[x] = i;
		dfs(x+1,sum+col（i));
		arr[x] = 0;//恢复现场 
	}
	
	
}
int main()
{
	cin>>n;
	n-=4;
	dfs(1,0);
	cout<<res<<endl;
	return 0;
}
